% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectra.R
\name{spectra}
\alias{spectra}
\title{Spectra object constructor}
\usage{
spectra(reflectance, wavelengths, names, meta = NULL, enforce01 = FALSE,
  ...)
}
\arguments{
\item{reflectance}{N by M numeric matrix. N samples in rows and M wavelengths
in columns}

\item{wavelengths}{wavelength names in vector of length M}

\item{names}{sample names in vector of length N}

\item{meta}{spectra metadata. defaults to NULL. Must be either of length or nrow
equals to the number of samples (nrow(reflectance) or length(names))}

\item{enforce01}{Force reflectance to be between 0 and 1. defaults to FALSE}

\item{...}{additional arguments to metadata creation. not implemented yet}
}
\value{
spectra object
}
\description{
\code{spectra} "manually" creates a spectra object
}
\note{
This function resorts to an ugly hack to deal with metadata assignment.
      Need to think a little harder to find a solution.
}
\examples{
library(spectrolab)
# 1. Create a reflectance matrix.
#    In this case, by removing the first column that holds the species name
rf = spec_matrix_example[ , -1]

# (2) Create a vector with wavelength labels that match
#     the reflectance matrix columns.
wl = colnames(rf)

# (3) Create a vector with sample labels that match
#     the reflectance matrix rows.
#     In this case, use the first colum of spec_matrix_example
sn = spec_matrix_example[ , 1]

# Finally, construct the spectra object using the `spectra` constructor
spec = spectra(reflectance = rf, wavelengths = wl, names = sn)
}
\author{
Jose Eduardo Meireles
}
